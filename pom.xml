<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.springcloud.template</groupId>
    <artifactId>spring-cloud-exmaple-with-oauth2</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>eureka-server</module>
        <module>service-template</module>
        <module>auth2-server</module>
        <module>common-security-lib</module>
        <module>common-security-jwt-lib</module>
        <module>auth-server-jwt</module>
        <module>zuul-server-with-auth2</module>
        <module>zuul-server-with-oauth2-jwt</module>
        <module>resource-service-jwt</module>
        <module>resource-server-jwt-feign</module>
        <module>zipkinserver</module>
        <module>sa-server</module>
        <module>config-server</module>

    </modules>
    <packaging>pom</packaging>

    <name>spring-cloud-exmaple-with-oauth2</name>
    <description>Demo project for Spring cloud with oauth2</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Dalston.SR3</spring-cloud.version>
        <mysql.driver.version>6.0.6</mysql.driver.version>
        <!--<docker.image.prefix>192.168.10.4:8082</docker.image.prefix>-->
        <docker.image.prefix>15.114.100.72:80</docker.image.prefix>
        <profiles.active>default</profiles.active>
        <test.skip>true</test.skip>
        <registry.username>admin</registry.username>
        <registry.password>Harbor12345</registry.password>
        <!--<docker.buildArg.HTTP_PROXY>http://192.168.1.130:1081</docker.buildArg.HTTP_PROXY>-->
    </properties>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <docker.image.prefix>192.168.10.4:8082</docker.image.prefix>
                <registry.username>admin</registry.username>
                <registry.password>admin123</registry.password>
            </properties>
        </profile>

    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.driver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>4.11</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.2.3</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.16.18</version>
                <scope>provided</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>

        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.21.0</version>
                <configuration>
                    <authConfig>
                        <username>${registry.username}</username>
                        <password>${registry.password}</password>
                    </authConfig>
                    <verbose>true</verbose>
                    <dockerHost>tcp://192.168.99.100:2376</dockerHost>
                    <certPath>C:/Users/chenluo/.docker/machine/machines/default</certPath>
                    <useColor>true</useColor>
                    <!--配置默认的docker相关资源放在哪里-->
                    <sourceDirectory>src/main/docker</sourceDirectory>
                    <images>
                        <image>
                            <name>${docker.image.prefix}/${project.groupId}/${project.artifactId}</name>
                            <build>
                                <cleanup></cleanup>
                                <!--这里的路径会继承configuration 元素下 sourceDirectory 元素的路径，如果这了的值指定为 src 那么整个docker 相关的路径就会是src/main/docker/src 所以这里指定为/即可 另一种方法是这里直接使用<dockerFile>Dockerfile</dockerFile> 来指定具体的文件-->
                                <!--注意，这个插件dockerfile 中的add copy 命令，文件可以和Docker 不在同一个目录，在子目录中。 assembly元素的子元素name 默认值是maven，所以会生成一个总的文件夹maven 然后相关的资源都在此文件夹中-->
                                <!--add 与 copy 命令 使用 ADD maven/xxxx.jar /xxxx/xxxx 的形式从子元素中添加。-->
                                <dockerFileDir>/</dockerFileDir>
                                <assembly>
                                    <!--<descriptorRef>artifact-with-dependencies</descriptorRef>-->
                                    <descriptor>${project.basedir}/src/main/docker/assembly.xml</descriptor>
                                </assembly>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <runOrder>alphabetical</runOrder>
                    <systemPropertyVariables>
                        <spring.profiles.active>${profiles.active}</spring.profiles.active>
                    </systemPropertyVariables>
                    <skip>${test.skip}</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com/</url>
        </repository>
    </repositories>

    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>ali</id>-->
    <!--<url>http://maven.aliyun.com/nexus/content/groups/public</url>-->
    <!--<releases>-->
    <!--<enabled>true</enabled>-->
    <!--</releases>-->
    <!--<snapshots>-->
    <!--<enabled>true</enabled>-->
    <!--</snapshots>-->
    <!--</repository>-->
    <!--</repositories>-->


</project>
